drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',forceylim=c(0,0),forcexlim=c(0,0),yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	yl <- ifelse(forceylim==c(0,0),range(y),forceylim)#
	xl <- ifelse(forcexlim==c(0,0),range(x),forcexlim)#
	plot(x,y,...,axes=FALSE,ylim=yl,xlim=xl)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,forcexlim=fxl,forceylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
hcp1 <- function(n) colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))(n)#
hcp2 <- function(n) colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))(n)
data()
ls()
image(volcano)
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',forceylim=c(0,0),forcexlim=c(0,0),yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	yl <- ifelse(forceylim==c(0,0),range(y),forceylim)#
	xl <- ifelse(forcexlim==c(0,0),range(x),forcexlim)#
	plot(x,y,...,axes=FALSE,ylim=yl,xlim=xl)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,forcexlim=fxl,forceylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
hcp1 <- function(n) colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))(n)#
hcp2 <- function(n) colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))(n)
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',forceylim=c(0,0),forcexlim=c(0,0),yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	yl <- ifelse(forceylim==c(0,0),range(y),forceylim)#
	xl <- ifelse(forcexlim==c(0,0),range(x),forcexlim)#
	plot(x,y,...,axes=FALSE,ylim=yl,xlim=xl)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,forcexlim=fxl,forceylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
hcp1(3)
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(missing(xlim)){xlim=range(x)}#
	if(missing(ylim)){xlim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
?missing
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	print(substitute(xlim))#
	if(missing(xlim)){xlim=range(x)}#
	if(missing(ylim)){xlim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	print(eval(xlim))#
	if(missing(xlim)){xlim=range(x)}#
	if(missing(ylim)){xlim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	print(is.null(xlim))#
	if(missing(xlim)){xlim=range(x)}#
	if(missing(ylim)){xlim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
is.R(4)
is.R()
is.na(xlim)
if(!exists("some.fun", mode="function"))#
  some.fun <- function(x) { cat("some.fun(x)\n"); x }
some.fun
!exists('xlim')
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	print(is.null(xlim))#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){xlim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){xlim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){xlim=range(y)}#
	print(xlim)#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	print(xlim)#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
log(c(1,1000),10)
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	print(xlim)#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(!exists('xlim')){xlim=range(x);if(xlg){xlim=log(xlim,10)}}#
	if(!exists('ylim')){ylim=range(y);if(ylg){ylim=log(ylim,10)}}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	print(xlim)#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(!exists('xlim')){xlim=range(x);if(xlg){xlim=log(xlim,10)}}#
	if(!exists('ylim')){ylim=range(y);if(ylg){ylim=log(ylim,10)}}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),xlim=c(0,2),ylim=c(0?2))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	print(!exists('ylim'))#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(!exists('xlim')){xlim=range(x);if(xlg){xlim=log(xlim,10)}}#
	if(!exists('ylim')){ylim=range(y);if(ylg){ylim=log(ylim,10)}}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),xlim=c(0,2),ylim=c(0,2))
get(xlim)
?get
is.defined
is.primitive
?is.primitive
is.array(xlim)
is.environmen(xlim)
exists
exists(xlim)
exists('xlim')
exists('ls')
?exists
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(!exists('xlim')){xlim=range(x);if(xlg){xlim=log(xlim,10)}}#
	if(!exists('ylim')){ylim=range(y);if(ylg){ylim=log(ylim,10)}}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}#
	if(ylg){ylim=log(ylim,10)}#
	plot(x,y,...,axes=FALSE,ylim=ylim,xlim=xlim)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:2))
logplot(c(1:2),log='')
logplot(c(1:100),log='')
logplot(c(1:100),log='y')
defined
defined()
?do.call
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}#
	if(ylg){ylim=log(ylim,10)}#
	plot(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xl=log(xlim,10)}else{xl=xlim}#
	if(ylg){yl=log(ylim,10)}else{yl=ylim}#
	plot(x,y,axes=FALSE,ylim=yl,xlim=xl,...)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(!exists('xlim')){xlim=range(x)}#
	if(!exists('ylim')){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xl=log(xlim,10)}else{xl=xlim}#
	if(ylg){yl=log(ylim,10)}else{yl=ylim}#
	plot.default(x,y,axes=FALSE,ylim=yl,xlim=xl,...)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
plot.default
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xl=log(xlim,10)}else{xl=xlim}#
	if(ylg){yl=log(ylim,10)}else{yl=ylim}#
	plot.default(x,y,axes=FALSE,ylim=yl,xlim=xl,...)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),log='y',xlim=c(0,3))
logplot(c(1:100),log='y',ylim=c(1,1e3))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xl=10^xlim}else{xl=xlim}#
	if(ylg){yl=10^ylim}else{yl=ylim}#
	plot.default(x,y,axes=FALSE,ylim=yl,xlim=xl,...)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xl=10^xlim}else{xl=xlim}#
	if(ylg){yl=10^ylim}else{yl=ylim}#
	plot.default(x,y,axes=FALSE,ylim=yl,xlim=xl,...)#
	if(xlg){drawlogaxis(1,xl)}else{axis(1,at=pretty(xl),labels=pretty(xl))}#
	if(ylg){drawlogaxis(2,yl)}else{axis(2,at=pretty(yl),labels=pretty(yl))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=xlim}else{xlim=xlim}#
	if(ylg){ylim=ylim}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=yl,xlim=xl,...)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),log='y',ylim=c(0,2))
drawlogaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=xlim}else{xlim=xlim}#
	if(ylg){ylim=ylim}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){drawlogaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){drawlogaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),log='y',ylim=c(0,3))
logplot(c(1:100),log='y',ylim=c(0,3),xlim=c(0,10))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=xlim}else{xlim=xlim}#
	if(ylg){ylim=ylim}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
source("/Users/Tim/Desktop/SCIAN-DEVELOP/pkg/log10/R/logplot.r")
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=ylim}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		fxl <- range(log(x,10))#
		x <- log(x,10)#
	} else {#
		fxl <- range(x)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		fyl <- range(log(y,10))#
		y <- log(y,10)#
	} else {#
		fyl <- range(y)#
	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		drawlogaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
hcp
hcp1
logplot(c(1:100),log='x',col=hcp1(10))
logplot(c(1:100),log='x',col=hcp2(10))
data(volcano)
as.matrix(volcano)
image(as.matrix(volcano))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
#	if('x'%in%strsplit(log,'')[[1]])#
#	{#
#		fxl <- range(log(x,10))#
#		x <- log(x,10)#
#	} else {#
#		fxl <- range(x)#
#	}#
#	if('y'%in%strsplit(log,'')[[1]])#
#	{#
#		fyl <- range(log(y,10))#
#		y <- log(y,10)#
#	} else {#
#		fyl <- range(y)#
#	}#
	logplot(1,1,xlim=fxl,ylim=fyl,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
	logplot(x,y,log=log,pch=NA,xint=int[1],yint=int[2],...)
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	logplot(x,y,log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=range(x),ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logfill(as.matrix(volcano),log='x')
logfill(as.matrix(volcano),log='y')
logfill(as.matrix(volcano),)
logfill(as.matrix(volcano),log='')
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- ifelse('x'%in%strsplit(log,'')[[1]],10^range(x),range(x))#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logfill(as.matrix(volcano))
	xl <- ifelse('x'%in%strsplit(log,'')[[1]],log(range(x),10),range(x))
	if('x'%in%strsplit(log,'')[[1]]){xl=log(range(x),10)}else{xl=range(x)}
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]]){xl=log(range(x),10)}else{xl=range(x)}#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
colnames(volcano)
volcano
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	if('x'%in%strsplit(log,'')[[1]]){xl=log(range(x),10)}else{xl=range(x)}#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	if('x'%in%strsplit(log,'')[[1]]){xl=round(log(range(x),10),3)}else{xl=range(x)}#
	print(xl)#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),xlim=c(0,1.92))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
#	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
#	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	if('x'%in%strsplit(log,'')[[1]]){xl=log(range(x),10)}else{xl=range(x)}#
	print(xl)#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),xlim=c(0,2))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
#	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	if('x'%in%strsplit(log,'')[[1]]){xl=log(range(x),10)}else{xl=range(x)}#
	print(xl)#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	if('x'%in%strsplit(log,'')[[1]]){xl=log(range(x),10)}else{xl=range(x)}#
	print(xl)#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100),log='x')
logplot(c(1:100),log='x',xlim=c(1:200))
logplot(c(1:100),log='y',xlim=c(1,200))
logplot(c(1:100),log='x',xlim=c(1,200))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	xl <- range(x)#
	yl <- range(y)#
	print(xl)#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=range(y),...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	xl <- range(x)#
	yl <- range(y)#
	print(xl)#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,fxl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
	#	logaxis(2,fyl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	print(x)#
	xl <- range(x)#
	yl <- range(y)#
	print(xl)#
	logplot(1,1,log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	print(xl)#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	print(xl)#
	print(yl)#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	print(xl)#
	print(yl)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		xl <- log(xl,10)#
	}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		x <- log(x,10)#
	}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		x <- log(x,10)#
	}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
dim(volcano)
logfill(volcano,log='xy')
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		x <- 10^x#
	}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	logplot(range(x),range(y),log='',pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	logplot(range(x),range(y),pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		xl <- range(x)#
		x <- log(x,10)#
	}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		x <- log(x,10)#
	}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
#		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logfill(volcano,log='')
logfill(volcano,log='y')
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		x <- log(x,10)#
	}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logfill(volcano,log='x')
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	print(xlim)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,xl)#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logplot(c(1:100))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,yl)#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
logfill(volcano)
source(file='/Users/Tim/Desktop/SCIAN-DEVELOP/pkg/log10/R/logplot.r', print.eval=TRUE)
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,log(yl,10))#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))
example(logplot)
?logplot
version()
abline(h=1e3)
abline(h=3)
abline
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,log(yl,10))#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))#
#
logabline <- function (a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL, #
    coef = NULL, untf = FALSE, log='xy', ...) #
{#
	if('y'%in%strsplit(log,'')[[1]]){h = log(h,10)}#
	if('x'%in%strsplit(log,'')[[1]]){v = log(v,10)}#
    int_abline <- function(a, b, h, v, untf, col = par("col"), #
        lty = par("lty"), lwd = par("lwd"), ...) .Internal(abline(a, #
        b, h, v, untf, col, lty, lwd, ...))#
    if (!is.null(reg)) {#
        if (!is.null(a)) #
            warning("'a' is overridden by 'reg'")#
        a <- reg#
    }#
    if (is.object(a) || is.list(a)) {#
        p <- length(coefa <- as.vector(coef(a)))#
        if (p > 2) #
            warning("only using the first two of ", p, "regression coefficients")#
        islm <- inherits(a, "lm")#
        noInt <- if (islm) #
            !as.logical(attr(stats::terms(a), "intercept"))#
        else p == 1#
        if (noInt) {#
            a <- 0#
            b <- coefa[1L]#
        }#
        else {#
            a <- coefa[1L]#
            b <- if (p >= 2) #
                coefa[2L]#
            else 0#
        }#
    }#
    if (!is.null(coef)) {#
        if (!is.null(a)) #
            warning("'a' and 'b' are overridden by 'coef'")#
        a <- coef[1L]#
        b <- coef[2L]#
    }#
    int_abline(a = a, b = b, h = h, v = v, untf = untf, ...)#
    invisible()#
}
logabline(h=2)
v
logabline(v=2)
logabline(v=2,log='x')
logabline(v=2,log='y')
logabline(v=1e2,log='y')
logabline(h=1e2,log='y')
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,log(yl,10))#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))#
#
logabline <- function (a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL, #
    coef = NULL, untf = FALSE, log='xy', ...) #
{#
	if(!is.null(h){if('y'%in%strsplit(log,'')[[1]]){h = log(h,10)}}#
	if(!is.null(v){if('x'%in%strsplit(log,'')[[1]]){v = log(v,10)}}#
    int_abline <- function(a, b, h, v, untf, col = par("col"), #
        lty = par("lty"), lwd = par("lwd"), ...) .Internal(abline(a, #
        b, h, v, untf, col, lty, lwd, ...))#
    if (!is.null(reg)) {#
        if (!is.null(a)) #
            warning("'a' is overridden by 'reg'")#
        a <- reg#
    }#
    if (is.object(a) || is.list(a)) {#
        p <- length(coefa <- as.vector(coef(a)))#
        if (p > 2) #
            warning("only using the first two of ", p, "regression coefficients")#
        islm <- inherits(a, "lm")#
        noInt <- if (islm) #
            !as.logical(attr(stats::terms(a), "intercept"))#
        else p == 1#
        if (noInt) {#
            a <- 0#
            b <- coefa[1L]#
        }#
        else {#
            a <- coefa[1L]#
            b <- if (p >= 2) #
                coefa[2L]#
            else 0#
        }#
    }#
    if (!is.null(coef)) {#
        if (!is.null(a)) #
            warning("'a' and 'b' are overridden by 'coef'")#
        a <- coef[1L]#
        b <- coef[2L]#
    }#
    int_abline(a = a, b = b, h = h, v = v, untf = untf, ...)#
    invisible()#
}
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,log(yl,10))#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))#
#
logabline <- function (a = NULL, b = NULL, h = NULL, v = NULL, reg = NULL, #
    coef = NULL, untf = FALSE, log='xy', ...) #
{#
	if(!is.null(h)){if('y'%in%strsplit(log,'')[[1]]){h = log(h,10)}}#
	if(!is.null(v)){if('x'%in%strsplit(log,'')[[1]]){v = log(v,10)}}#
    int_abline <- function(a, b, h, v, untf, col = par("col"), #
        lty = par("lty"), lwd = par("lwd"), ...) .Internal(abline(a, #
        b, h, v, untf, col, lty, lwd, ...))#
    if (!is.null(reg)) {#
        if (!is.null(a)) #
            warning("'a' is overridden by 'reg'")#
        a <- reg#
    }#
    if (is.object(a) || is.list(a)) {#
        p <- length(coefa <- as.vector(coef(a)))#
        if (p > 2) #
            warning("only using the first two of ", p, "regression coefficients")#
        islm <- inherits(a, "lm")#
        noInt <- if (islm) #
            !as.logical(attr(stats::terms(a), "intercept"))#
        else p == 1#
        if (noInt) {#
            a <- 0#
            b <- coefa[1L]#
        }#
        else {#
            a <- coefa[1L]#
            b <- if (p >= 2) #
                coefa[2L]#
            else 0#
        }#
    }#
    if (!is.null(coef)) {#
        if (!is.null(a)) #
            warning("'a' and 'b' are overridden by 'coef'")#
        a <- coef[1L]#
        b <- coef[2L]#
    }#
    int_abline(a = a, b = b, h = h, v = v, untf = untf, ...)#
    invisible()#
}
logabline(h=10)
logabline(h=100)
logplot(c(1:100000))
?rvb
help.search('rvb')
?colorRamp
hcp3 <- colorRampPalette(c(rgb(0,0,255),rgb(15,251,240),rgb(247,251,9),rgb(246,150,9),rgb(247,4,1),rgb(128,4,0)))
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=cm.colors,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,log(yl,10))#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
loglm <- function(mod,log='xy',range=c(1e-1,1e2),...)#
{#
	cdir <- mod$coeff[2]#
	orao <- mod$coeff[1]#
	x <- seq(from=range[1],to=range[2],length.out=1e3)#
	y <- x * cdir + orao#
	addlog(x,y,type='l',log=log,...)#
}#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))#
hcp3 <- colorRampPalette(c(rgb(0,0,255,max='255'),rgb(15,251,240,max='255'),rgb(247,251,9,max='255'),rgb(246,150,9,max='255'),rgb(247,4,1,max='255'),rgb(128,4,0,max='255')))
plot(c(1:200),col=hcp3(100))
library(log10)
example(hcp3)
plot(2)
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=hcp3,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,log(yl,10))#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
loglm <- function(mod,log='xy',range=c(1e-1,1e2),...)#
{#
	cdir <- mod$coeff[2]#
	orao <- mod$coeff[1]#
	x <- seq(from=range[1],to=range[2],length.out=1e3)#
	y <- x * cdir + orao#
	addlog(x,y,type='l',log=log,...)#
}#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))#
hcp3 <- colorRampPalette(c(rgb(0,0,255,max='255'),rgb(15,251,240,max='255'),rgb(247,251,9,max='255'),rgb(246,150,9,max='255'),rgb(247,4,1,max='255'),rgb(128,4,0,max='255')))
diff(range(c(1:10)))
lm(c(1:10)~c(1:10))
a<-lm(c(1:10)~c(1:10))
a$vx
a$x
a$values
summary(a)
a$variables
a$terms[,"variables"]
a$terms[1]
a$terms
attr(a)
attr(,"predvars")
attr(a,"predvars")
model
?lm
a
a<-lm(c(1:10)~c(11:20))
a<-lm(c(2:12)~c(11:20))
a<-lm(c(2:11)~c(11:20))
a$fitted
a$pred
a$predvals
terms(a,"variables")
terms(a,"response")
terms(a,"predvars")
plot(terms(a,"predvars"))[[1]]
plot(terms(a,"predvars"))[1]
plot(terms(a,"predvars"))
terms(a,"formula")
terms(a,"formula","variables")
terms(a)
attr(terms(a),'predvars')
attr(terms(a),'predvars')[[1]]
attr(terms(a),'variables')[[1]]
attr(terms(a),'variables')
eval(attr(terms(a),'variables'))
eval(attr(terms(a),'variables'))[[1]]
setwd('/Users/Tim/Desktop/SCIAN-DEVELOP/pkg/log10/R')
logaxis <- function(side,range)#
{#
	par(tck=0.02,las=1)#
	d <- range#
	mlog <- floor(min(d))#
	Mlog <- ceiling(max(d))#
	SeqLog <- c(mlog:Mlog)#
	Nlog <- (Mlog-mlog)+1#
	for(i in SeqLog)#
	{#
		if(i==0)#
		{#
			axis(side,at=i,labels=substitute(1^phantom(0)))#
		}#
		else{#
			axis(side,at=i,labels=substitute(10^i))#
		}#
	}#
	ats <- log(seq(from=2,to=9,by=1),10)#
	mod <- NULL#
	for(i in SeqLog)#
	{#
		mod <- c(mod,rep(i,length(ats)))#
	}#
	ats <- rep(ats,Nlog)#
	ats <- ats+mod#
	par(tck=0.02/3)#
	axis(side,at=ats,labels=NA)#
}#
#
logplot <- function(x,y,log='xy',yint='r',xint='r',xlim=NULL,ylim=NULL,...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	if(is.null(xlim)){xlim=range(x)}#
	if(is.null(ylim)){ylim=range(y)}#
	par(tck=0.02,xaxs=xint,yaxs=yint)#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	if(xlg){xlim=log(xlim,10)}else{xlim=xlim}#
	if(ylg){ylim=log(ylim,10)}else{ylim=ylim}#
	plot.default(x,y,axes=FALSE,ylim=ylim,xlim=xlim,...)#
	if(xlg){logaxis(1,xlim)}else{axis(1,at=pretty(xlim),labels=pretty(xlim))}#
	if(ylg){logaxis(2,ylim)}else{axis(2,at=pretty(ylim),labels=pretty(ylim))}#
	box()#
}#
#
addlog <- function(x,y,log='xy',...)#
{#
	if(missing(y))#
	{#
		y <- x#
		x <- c(1:length(x))#
	}#
	xlg <- FALSE#
	ylg <- FALSE#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10);xlg=TRUE}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10);ylg=TRUE}#
	points(x,y,...)#
	#
}#
#
logfill <- function(z,pal=hcp3,f.nbins=100,c.nbins=10,log='xy',c.col='black',int=c('i','i'),labcex=0.8,...)#
{#
	if(is.null(colnames(z))){colnames(z)<-c(1:ncol(z))}#
	if(is.null(rownames(z))){rownames(z)<-c(1:nrow(z))}#
	x <- as.numeric(rownames(z))#
	y <- as.numeric(colnames(z))#
	xl <- range(x)#
	yl <- range(y)#
	if('x'%in%strsplit(log,'')[[1]]){x <- log(x,10)}#
	if('y'%in%strsplit(log,'')[[1]]){y <- log(y,10)}#
	logplot(range(x),range(y),log=log,pch=NA,xint=int[1],yint=int[2],xlim=xl,ylim=yl,...)#
	levels <- pretty(range(z),f.nbins)#
	col <- pal(length(levels)-1)#
	.Internal(filledcontour(#
		as.double(x),#
		as.double(y),#
		z,#
		as.double(levels),#
		col = col)#
		)#
	if('x'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(1,log(xl,10))#
	}#
	if('y'%in%strsplit(log,'')[[1]])#
	{#
		logaxis(2,log(yl,10))#
	}#
	if(c.nbins>0){contour(x,y,z,add=TRUE,col=c.col,n.levels=c.nbins,labcex=labcex)}#
}#
#
loglm <- function(mod,log='xy',range=NULL,...)#
{#
	if(is.null(range)){#
		predictors <- eval(attr(terms(mod),'variables'))[[1]]#
		ampli <- diff(range(predictors))#
		range <- c((min(predictors)-0.2*ampli),(max(predictors)+0.2*ampli))#
	}#
	cdir <- mod$coeff[2]#
	orao <- mod$coeff[1]#
	x <- seq(from=range[1],to=range[2],length.out=1e3)#
	y <- x * cdir + orao#
	addlog(x,y,type='l',log=log,...)#
}#
#
hcp1 <- colorRampPalette(c('darkblue','blue','turquoise','green','yellow','orange','red','darkred'))#
hcp2 <- colorRampPalette(c("black","darkblue","blue","green","orange",'yellow',"red","darkred"))#
hcp3 <- colorRampPalette(c(rgb(0,0,255,max='255'),rgb(15,251,240,max='255'),rgb(247,251,9,max='255'),rgb(246,150,9,max='255'),rgb(247,4,1,max='255'),rgb(128,4,0,max='255')))
